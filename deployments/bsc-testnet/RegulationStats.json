{
  "address": "0x20d31D57a1FFDB2d09Fd68be0D3E8DD9cB5DcB07",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epochNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "added",
          "type": "uint256"
        }
      ],
      "name": "addBonded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epochNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "twap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expanded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "boardroomFunding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "daoFunding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "devFunding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "insuranceFunding",
          "type": "uint256"
        }
      ],
      "name": "addEpochInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epochNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "added",
          "type": "uint256"
        }
      ],
      "name": "addRedeemed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "epochInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "twap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expanded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bonded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redeemed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_numEpochs",
          "type": "uint256"
        }
      ],
      "name": "getEpochInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "results",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextEpochPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "governanceRecoverUnsupported",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBoardroomFunding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDaoFunding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDevFunding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalInsuranceFunding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x589cb8e7eb23bb3b2152b6c69a484341f22fce2db6c7fb6e9e923e1ac02d7f62",
  "receipt": {
    "to": null,
    "from": "0x0DCC098Fa701906a49c3196B1FD2464F4802F4E2",
    "contractAddress": "0x20d31D57a1FFDB2d09Fd68be0D3E8DD9cB5DcB07",
    "transactionIndex": 2,
    "gasUsed": "911505",
    "logsBloom": "0x
    "blockHash": "0x6bb34965c2c6b21615bd3561ca132153ab4b13deb6d590418124f362fe615095",
    "transactionHash": "0x589cb8e7eb23bb3b2152b6c69a484341f22fce2db6c7fb6e9e923e1ac02d7f62",
    "logs": [],
    "blockNumber": 19541960,
    "cumulativeGasUsed": "2728340",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d2a7bbe40846e68fb0ed2db2af96c568",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epochNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"added\",\"type\":\"uint256\"}],\"name\":\"addBonded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epochNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expanded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boardroomFunding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoFunding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"devFunding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insuranceFunding\",\"type\":\"uint256\"}],\"name\":\"addEpochInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epochNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"added\",\"type\":\"uint256\"}],\"name\":\"addRedeemed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"twap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expanded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bonded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numEpochs\",\"type\":\"uint256\"}],\"name\":\"getEpochInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"results\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextEpochPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBoardroomFunding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDaoFunding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDevFunding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInsuranceFunding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RegulationStats.sol\":\"RegulationStats\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.6.0;\\nimport \\\"../Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract ContextUpgradeSafe is Initializable {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n\\n\\n    }\\n\\n\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\"},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"content\":\"pragma solidity >=0.4.24 <0.7.0;\\n\\n\\n/**\\n * @title Initializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n */\\ncontract Initializable {\\n\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  bool private initialized;\\n\\n  /**\\n   * @dev Indicates that the contract is in the process of being initialized.\\n   */\\n  bool private initializing;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    require(initializing || isConstructor() || !initialized, \\\"Contract instance has already been initialized\\\");\\n\\n    bool isTopLevelCall = !initializing;\\n    if (isTopLevelCall) {\\n      initializing = true;\\n      initialized = true;\\n    }\\n\\n    _;\\n\\n    if (isTopLevelCall) {\\n      initializing = false;\\n    }\\n  }\\n\\n  /// @dev Returns true if and only if the function is running in the constructor\\n  function isConstructor() private view returns (bool) {\\n    // extcodesize checks the size of the code stored in an address, and\\n    // address returns the current address. Since the code is still not\\n    // deployed when running a constructor, any checks on its code size will\\n    // yield zero, making it an effective way to detect if a contract is\\n    // under construction or not.\\n    address self = address(this);\\n    uint256 cs;\\n    assembly { cs := extcodesize(self) }\\n    return cs == 0;\\n  }\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\"},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\nimport \\\"../Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n\\n\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n\\n    }\\n\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/RegulationStats.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/IRegulationStats.sol\\\";\\nimport \\\"./interfaces/ITreasury.sol\\\";\\n\\ncontract RegulationStats is OwnableUpgradeSafe, IRegulationStats {\\n    using SafeMath for uint256;\\n\\n    struct Epoch {\\n        uint256 twap;\\n        uint256 expanded;\\n        uint256 bonded;\\n        uint256 redeemed;\\n    }\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    // governance\\n    address public treasury;\\n\\n    // flags\\n    bool private initialized = false;\\n\\n    mapping(uint256 => Epoch) public epochInfo;\\n\\n    uint256 public totalBoardroomFunding;\\n    uint256 public totalDaoFunding;\\n    uint256 public totalDevFunding;\\n    uint256 public totalInsuranceFunding;\\n\\n    /* =================== Added variables (need to keep orders for proxy to work) =================== */\\n    // ...\\n\\n    /* =================== Events =================== */\\n\\n    /* =================== Modifier =================== */\\n\\n    modifier onlyTreasuryOrOwner() {\\n        require(treasury == msg.sender || owner() == msg.sender, \\\"!owner && !treasury\\\");\\n        _;\\n    }\\n\\n    /* ========== VIEW FUNCTIONS ========== */\\n\\n    function getCurrentEpoch() public view returns (uint256) {\\n        return ITreasury(treasury).epoch();\\n    }\\n\\n    function getNextEpochPoint() public view returns (uint256) {\\n        return ITreasury(treasury).nextEpochPoint();\\n    }\\n\\n    function getEpochInfo(uint256 _start, uint256 _numEpochs) public view returns (uint256[] memory results) {\\n        results = new uint256[](_numEpochs * 4);\\n        uint256 _rindex = 0;\\n        for (uint256 i = 0; i < _numEpochs; i++) {\\n            Epoch memory _epochInfo = epochInfo[_start + i];\\n            results[_rindex++] = _epochInfo.twap;\\n            results[_rindex++] = _epochInfo.expanded;\\n            results[_rindex++] = _epochInfo.bonded;\\n            results[_rindex++] = _epochInfo.redeemed;\\n        }\\n    }\\n\\n    /* ========== GOVERNANCE ========== */\\n\\n    function initialize(address _treasury) external initializer {\\n        OwnableUpgradeSafe.__Ownable_init();\\n\\n        treasury = _treasury;\\n    }\\n\\n    function setTreasury(address _treasury) external onlyOwner {\\n        treasury = _treasury;\\n    }\\n\\n    /* ========== MUTABLE FUNCTIONS ========== */\\n\\n    function addEpochInfo(uint256 epochNumber, uint256 twap, uint256 expanded,\\n        uint256 boardroomFunding, uint256 daoFunding, uint256 devFunding, uint256 insuranceFunding) external override onlyTreasuryOrOwner {\\n        Epoch storage _epochInfo = epochInfo[epochNumber];\\n        _epochInfo.twap = twap;\\n        _epochInfo.expanded = expanded;\\n        totalBoardroomFunding = totalBoardroomFunding.add(boardroomFunding);\\n        totalDaoFunding = totalDaoFunding.add(daoFunding);\\n        totalDevFunding = totalDevFunding.add(devFunding);\\n        totalInsuranceFunding = totalInsuranceFunding.add(insuranceFunding);\\n    }\\n\\n    function addBonded(uint256 epochNumber, uint256 added) external override onlyTreasuryOrOwner {\\n        Epoch storage _epochInfo = epochInfo[epochNumber];\\n        _epochInfo.bonded = _epochInfo.bonded.add(added);\\n    }\\n\\n    function addRedeemed(uint256 epochNumber, uint256 added) external override onlyTreasuryOrOwner {\\n        Epoch storage _epochInfo = epochInfo[epochNumber];\\n        _epochInfo.redeemed = _epochInfo.redeemed.add(added);\\n    }\\n\\n    /* ========== EMERGENCY ========== */\\n\\n    function governanceRecoverUnsupported(IERC20 _token) external onlyOwner {\\n        _token.transfer(owner(), _token.balanceOf(address(this)));\\n    }\\n}\\n\",\"keccak256\":\"0xf4add0455f6849427e20066c172dee377a788506370190634358673b87e2ecfb\",\"license\":\"MIT\"},\"contracts/interfaces/IRegulationStats.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IRegulationStats {\\n    function addEpochInfo(\\n        uint256 epochNumber,\\n        uint256 twap,\\n        uint256 expanded,\\n        uint256 boardroomFunding,\\n        uint256 daoFunding,\\n        uint256 marketingFunding,\\n        uint256 insuranceFunding\\n    ) external;\\n\\n    function addBonded(uint256 epochNumber, uint256 added) external;\\n\\n    function addRedeemed(uint256 epochNumber, uint256 added) external;\\n}\\n\",\"keccak256\":\"0xc8a4f7e6dac85af45702fd584ce07ef3d56902e37a9f61a2f18c24288fe10aa1\",\"license\":\"MIT\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ITreasury {\\n    function epoch() external view returns (uint256);\\n\\n    function nextEpochPoint() external view returns (uint256);\\n\\n    function getTokenPrice() external view returns (uint256);\\n\\n    function buyBonds(uint256 amount, uint256 targetPrice) external;\\n\\n    function redeemBonds(uint256 amount, uint256 targetPrice) external;\\n}\\n\",\"keccak256\":\"0xff4abcc6d867365b43d49c08688334dd1872993f027ac6ec8af8e93ead49e8e5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526097805460ff60a01b1916905534801561001d57600080fd5b50610f7e8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063ae51accb116100a2578063c4d66de811610071578063c4d66de8146102c8578063e8d4a0f3146102ee578063f0f4426014610314578063f2fde38b1461033a578063fdb4ed6d1461036057610116565b8063ae51accb1461023d578063b97dd9e2146102b0578063ba67aa18146102b8578063bf582ecf146102c057610116565b8063715018a6116100e9578063715018a6146101ca57806372398516146101d2578063887e6b81146102135780638c9b47721461022d5780638da5cb5b1461023557610116565b80633894228e1461011b5780635a7802751461015e57806361d027b31461018357806368a3fd31146101a7575b600080fd5b6101386004803603602081101561013157600080fd5b5035610368565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6101816004803603604081101561017457600080fd5b508035906020013561038f565b005b61018b610425565b604080516001600160a01b039092168252519081900360200190f35b610181600480360360408110156101bd57600080fd5b5080359060200135610434565b6101816104ca565b610181600480360360e08110156101e857600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c0013561056c565b61021b61063d565b60408051918252519081900360200190f35b61021b610643565b61018b610649565b6102606004803603604081101561025357600080fd5b5080359060200135610658565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561029c578181015183820152602001610284565b505050509050019250505060405180910390f35b61021b610797565b61021b61080d565b61021b610813565b610181600480360360208110156102de57600080fd5b50356001600160a01b0316610819565b6101816004803603602081101561030457600080fd5b50356001600160a01b03166108df565b6101816004803603602081101561032a57600080fd5b50356001600160a01b0316610a3e565b6101816004803603602081101561035057600080fd5b50356001600160a01b0316610ab8565b61021b610bb1565b60986020526000908152604090208054600182015460028301546003909301549192909184565b6097546001600160a01b03163314806103b75750336103ac610649565b6001600160a01b0316145b6103fe576040805162461bcd60e51b8152602060048201526013602482015272216f776e65722026262021747265617375727960681b604482015290519081900360640190fd5b6000828152609860205260409020600381015461041b9083610bf6565b6003909101555050565b6097546001600160a01b031681565b6097546001600160a01b031633148061045c575033610451610649565b6001600160a01b0316145b6104a3576040805162461bcd60e51b8152602060048201526013602482015272216f776e65722026262021747265617375727960681b604482015290519081900360640190fd5b600082815260986020526040902060028101546104c09083610bf6565b6002909101555050565b6104d2610c57565b6065546001600160a01b03908116911614610522576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6097546001600160a01b0316331480610594575033610589610649565b6001600160a01b0316145b6105db576040805162461bcd60e51b8152602060048201526013602482015272216f776e65722026262021747265617375727960681b604482015290519081900360640190fd5b6000878152609860205260409020868155600181018690556099546106009086610bf6565b609955609a546106109085610bf6565b609a55609b546106209084610bf6565b609b55609c546106309083610bf6565b609c555050505050505050565b609a5481565b609c5481565b6065546001600160a01b031690565b60608160040267ffffffffffffffff8111801561067457600080fd5b5060405190808252806020026020018201604052801561069e578160200160208202803683370190505b5090506000805b8381101561078f576106b5610eac565b6098600083880181526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015184848060010195508151811061071657fe5b602002602001018181525050806020015184848060010195508151811061073957fe5b60209081029190910101526040810151845160018501948691811061075a57fe5b60209081029190910101526060810151845160018501948691811061077b57fe5b6020908102919091010152506001016106a5565b505092915050565b6097546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf916004808301926020929190829003018186803b1580156107dc57600080fd5b505afa1580156107f0573d6000803e3d6000fd5b505050506040513d602081101561080657600080fd5b5051905090565b60995481565b609b5481565b600054610100900460ff16806108325750610832610c5b565b80610840575060005460ff16155b61087b5760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff161580156108a6576000805460ff1961ff0019909116610100171660011790555b6108ae610c61565b609780546001600160a01b0319166001600160a01b03841617905580156108db576000805461ff00191690555b5050565b6108e7610c57565b6065546001600160a01b03908116911614610937576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b806001600160a01b031663a9059cbb61094e610649565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b15801561099457600080fd5b505afa1580156109a8573d6000803e3d6000fd5b505050506040513d60208110156109be57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610a0f57600080fd5b505af1158015610a23573d6000803e3d6000fd5b505050506040513d6020811015610a3957600080fd5b505050565b610a46610c57565b6065546001600160a01b03908116911614610a96576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b609780546001600160a01b0319166001600160a01b0392909216919091179055565b610ac0610c57565b6065546001600160a01b03908116911614610b10576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b6001600160a01b038116610b555760405162461bcd60e51b8152600401808060200182810382526026815260200180610ed56026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b609754604080516362cb3e1360e11b815290516000926001600160a01b03169163c5967c26916004808301926020929190829003018186803b1580156107dc57600080fd5b600082820183811015610c50576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b303b1590565b600054610100900460ff1680610c7a5750610c7a610c5b565b80610c88575060005460ff16155b610cc35760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff16158015610cee576000805460ff1961ff0019909116610100171660011790555b610cf6610d13565b610cfe610db3565b8015610d10576000805461ff00191690555b50565b600054610100900460ff1680610d2c5750610d2c610c5b565b80610d3a575060005460ff16155b610d755760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff16158015610cfe576000805460ff1961ff0019909116610100171660011790558015610d10576000805461ff001916905550565b600054610100900460ff1680610dcc5750610dcc610c5b565b80610dda575060005460ff16155b610e155760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff16158015610e40576000805460ff1961ff0019909116610100171660011790555b6000610e4a610c57565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610d10576000805461ff001916905550565b604051806080016040528060008152602001600081526020016000815260200160008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220f019cf9ea6436ff95aae1e826dac98577bbbca93dd7fba11b9cf7eb1eff07eb064736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063ae51accb116100a2578063c4d66de811610071578063c4d66de8146102c8578063e8d4a0f3146102ee578063f0f4426014610314578063f2fde38b1461033a578063fdb4ed6d1461036057610116565b8063ae51accb1461023d578063b97dd9e2146102b0578063ba67aa18146102b8578063bf582ecf146102c057610116565b8063715018a6116100e9578063715018a6146101ca57806372398516146101d2578063887e6b81146102135780638c9b47721461022d5780638da5cb5b1461023557610116565b80633894228e1461011b5780635a7802751461015e57806361d027b31461018357806368a3fd31146101a7575b600080fd5b6101386004803603602081101561013157600080fd5b5035610368565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6101816004803603604081101561017457600080fd5b508035906020013561038f565b005b61018b610425565b604080516001600160a01b039092168252519081900360200190f35b610181600480360360408110156101bd57600080fd5b5080359060200135610434565b6101816104ca565b610181600480360360e08110156101e857600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c0013561056c565b61021b61063d565b60408051918252519081900360200190f35b61021b610643565b61018b610649565b6102606004803603604081101561025357600080fd5b5080359060200135610658565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561029c578181015183820152602001610284565b505050509050019250505060405180910390f35b61021b610797565b61021b61080d565b61021b610813565b610181600480360360208110156102de57600080fd5b50356001600160a01b0316610819565b6101816004803603602081101561030457600080fd5b50356001600160a01b03166108df565b6101816004803603602081101561032a57600080fd5b50356001600160a01b0316610a3e565b6101816004803603602081101561035057600080fd5b50356001600160a01b0316610ab8565b61021b610bb1565b60986020526000908152604090208054600182015460028301546003909301549192909184565b6097546001600160a01b03163314806103b75750336103ac610649565b6001600160a01b0316145b6103fe576040805162461bcd60e51b8152602060048201526013602482015272216f776e65722026262021747265617375727960681b604482015290519081900360640190fd5b6000828152609860205260409020600381015461041b9083610bf6565b6003909101555050565b6097546001600160a01b031681565b6097546001600160a01b031633148061045c575033610451610649565b6001600160a01b0316145b6104a3576040805162461bcd60e51b8152602060048201526013602482015272216f776e65722026262021747265617375727960681b604482015290519081900360640190fd5b600082815260986020526040902060028101546104c09083610bf6565b6002909101555050565b6104d2610c57565b6065546001600160a01b03908116911614610522576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6097546001600160a01b0316331480610594575033610589610649565b6001600160a01b0316145b6105db576040805162461bcd60e51b8152602060048201526013602482015272216f776e65722026262021747265617375727960681b604482015290519081900360640190fd5b6000878152609860205260409020868155600181018690556099546106009086610bf6565b609955609a546106109085610bf6565b609a55609b546106209084610bf6565b609b55609c546106309083610bf6565b609c555050505050505050565b609a5481565b609c5481565b6065546001600160a01b031690565b60608160040267ffffffffffffffff8111801561067457600080fd5b5060405190808252806020026020018201604052801561069e578160200160208202803683370190505b5090506000805b8381101561078f576106b5610eac565b6098600083880181526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015184848060010195508151811061071657fe5b602002602001018181525050806020015184848060010195508151811061073957fe5b60209081029190910101526040810151845160018501948691811061075a57fe5b60209081029190910101526060810151845160018501948691811061077b57fe5b6020908102919091010152506001016106a5565b505092915050565b6097546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf916004808301926020929190829003018186803b1580156107dc57600080fd5b505afa1580156107f0573d6000803e3d6000fd5b505050506040513d602081101561080657600080fd5b5051905090565b60995481565b609b5481565b600054610100900460ff16806108325750610832610c5b565b80610840575060005460ff16155b61087b5760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff161580156108a6576000805460ff1961ff0019909116610100171660011790555b6108ae610c61565b609780546001600160a01b0319166001600160a01b03841617905580156108db576000805461ff00191690555b5050565b6108e7610c57565b6065546001600160a01b03908116911614610937576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b806001600160a01b031663a9059cbb61094e610649565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b15801561099457600080fd5b505afa1580156109a8573d6000803e3d6000fd5b505050506040513d60208110156109be57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610a0f57600080fd5b505af1158015610a23573d6000803e3d6000fd5b505050506040513d6020811015610a3957600080fd5b505050565b610a46610c57565b6065546001600160a01b03908116911614610a96576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b609780546001600160a01b0319166001600160a01b0392909216919091179055565b610ac0610c57565b6065546001600160a01b03908116911614610b10576040805162461bcd60e51b81526020600482018190526024820152600080516020610efb833981519152604482015290519081900360640190fd5b6001600160a01b038116610b555760405162461bcd60e51b8152600401808060200182810382526026815260200180610ed56026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b609754604080516362cb3e1360e11b815290516000926001600160a01b03169163c5967c26916004808301926020929190829003018186803b1580156107dc57600080fd5b600082820183811015610c50576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b303b1590565b600054610100900460ff1680610c7a5750610c7a610c5b565b80610c88575060005460ff16155b610cc35760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff16158015610cee576000805460ff1961ff0019909116610100171660011790555b610cf6610d13565b610cfe610db3565b8015610d10576000805461ff00191690555b50565b600054610100900460ff1680610d2c5750610d2c610c5b565b80610d3a575060005460ff16155b610d755760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff16158015610cfe576000805460ff1961ff0019909116610100171660011790558015610d10576000805461ff001916905550565b600054610100900460ff1680610dcc5750610dcc610c5b565b80610dda575060005460ff16155b610e155760405162461bcd60e51b815260040180806020018281038252602e815260200180610f1b602e913960400191505060405180910390fd5b600054610100900460ff16158015610e40576000805460ff1961ff0019909116610100171660011790555b6000610e4a610c57565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610d10576000805461ff001916905550565b604051806080016040528060008152602001600081526020016000815260200160008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220f019cf9ea6436ff95aae1e826dac98577bbbca93dd7fba11b9cf7eb1eff07eb064736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 50,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 53,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 118,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "______gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 43,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 130,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 248,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 4021,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "treasury",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 4024,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "initialized",
        "offset": 20,
        "slot": "151",
        "type": "t_bool"
      },
      {
        "astId": 4028,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "epochInfo",
        "offset": 0,
        "slot": "152",
        "type": "t_mapping(t_uint256,t_struct(Epoch)4019_storage)"
      },
      {
        "astId": 4030,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "totalBoardroomFunding",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 4032,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "totalDaoFunding",
        "offset": 0,
        "slot": "154",
        "type": "t_uint256"
      },
      {
        "astId": 4034,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "totalDevFunding",
        "offset": 0,
        "slot": "155",
        "type": "t_uint256"
      },
      {
        "astId": 4036,
        "contract": "contracts/RegulationStats.sol:RegulationStats",
        "label": "totalInsuranceFunding",
        "offset": 0,
        "slot": "156",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Epoch)4019_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RegulationStats.Epoch)",
        "numberOfBytes": "32",
        "value": "t_struct(Epoch)4019_storage"
      },
      "t_struct(Epoch)4019_storage": {
        "encoding": "inplace",
        "label": "struct RegulationStats.Epoch",
        "members": [
          {
            "astId": 4012,
            "contract": "contracts/RegulationStats.sol:RegulationStats",
            "label": "twap",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4014,
            "contract": "contracts/RegulationStats.sol:RegulationStats",
            "label": "expanded",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4016,
            "contract": "contracts/RegulationStats.sol:RegulationStats",
            "label": "bonded",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4018,
            "contract": "contracts/RegulationStats.sol:RegulationStats",
            "label": "redeemed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AddLiquidity, AddLiquidityInterface } from "../AddLiquidity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "OperatorTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "governanceRecoverUnsupported",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator_",
        type: "address",
      },
    ],
    name: "transferOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600280546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e17905534801561003657600080fd5b5060006100416100e4565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506100936100e4565b600180546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a36100e8565b3390565b611212806100f76000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461017d578063a0e47bf614610192578063e8e33700146101a7578063f2fde38b14610227578063f305d7191461025a57610091565b806329605e77146100965780634456eda2146100cb57806354575af4146100f4578063570ca73514610137578063715018a614610168575b600080fd5b3480156100a257600080fd5b506100c9600480360360208110156100b957600080fd5b50356001600160a01b03166102a0565b005b3480156100d757600080fd5b506100e0610320565b604080519115158252519081900360200190f35b34801561010057600080fd5b506100c96004803603606081101561011757600080fd5b506001600160a01b03813581169160208101359160409091013516610346565b34801561014357600080fd5b5061014c6103a8565b604080516001600160a01b039092168252519081900360200190f35b34801561017457600080fd5b506100c96103b7565b34801561018957600080fd5b5061014c610475565b34801561019e57600080fd5b5061014c610484565b3480156101b357600080fd5b5061020960048036036101008110156101cb57600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c0820135169060e00135610493565b60408051938452602084019290925282820152519081900360600190f35b34801561023357600080fd5b506100c96004803603602081101561024a57600080fd5b50356001600160a01b03166104bb565b610209600480360360c081101561027057600080fd5b506001600160a01b0381358116916020810135916040820135916060810135916080820135169060a001356105cf565b6102a86105f3565b6001600160a01b03166102b9610475565b6001600160a01b031614610314576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61031d816105f7565b50565b6001546000906001600160a01b03166103376105f3565b6001600160a01b031614905090565b6001546001600160a01b0316331461038f5760405162461bcd60e51b815260040180806020018281038252602481526020018061118f6024913960400191505060405180910390fd5b6103a36001600160a01b0384168284610694565b505050565b6001546001600160a01b031690565b6103bf6105f3565b6001600160a01b03166103d0610475565b6001600160a01b03161461042b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6002546001600160a01b031681565b60008060006104a78b8b8b8b8b8b8b6106e6565b925092509250985098509895505050505050565b6104c36105f3565b6001600160a01b03166104d4610475565b6001600160a01b03161461052f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105745760405162461bcd60e51b81526004018080602001828103825260268152602001806111166026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060006105e18989898989610a85565b92509250925096509650969350505050565b3390565b6001600160a01b03811661063c5760405162461bcd60e51b815260040180806020018281038252602d815260200180611162602d913960400191505060405180910390fd5b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103a3908490610cde565b6000808087158015906106f857508615155b61073e576040805162461bcd60e51b81526020600482015260126024820152710616d6f756e74732063616e277420626520360741b604482015290519081900360640190fd5b604080516323b872dd60e01b8152336004820152306024820152604481018a905290516001600160a01b038c16916323b872dd9160648083019260209291908290030181600087803b15801561079357600080fd5b505af11580156107a7573d6000803e3d6000fd5b505050506040513d60208110156107bd57600080fd5b5050604080516323b872dd60e01b81523360048201523060248201526044810189905290516001600160a01b038b16916323b872dd9160648083019260209291908290030181600087803b15801561081457600080fd5b505af1158015610828573d6000803e3d6000fd5b505050506040513d602081101561083e57600080fd5b5050600254610857908b906001600160a01b0316610d8f565b60025461086e908a906001600160a01b0316610d8f565b6002546040805162e8e33760e81b81526001600160a01b038d811660048301528c81166024830152604482018c9052606482018b9052608482018a905260a4820189905287811660c48301524260e483015291516000938493849391169163e8e33700916101048082019260609290919082900301818787803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b505050506040513d606081101561091e57600080fd5b5080516020820151604090920151909450909250905060006109408c85610e99565b11156109d3576001600160a01b038d1663a9059cbb886109608e87610e99565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156109a657600080fd5b505af11580156109ba573d6000803e3d6000fd5b505050506040513d60208110156109d057600080fd5b50505b60006109df8b84610e99565b1115610a72576001600160a01b038c1663a9059cbb886109ff8d86610e99565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a4557600080fd5b505af1158015610a59573d6000803e3d6000fd5b505050506040513d6020811015610a6f57600080fd5b50505b919c909b50909950975050505050505050565b600080808615801590610a9757503415155b610add576040805162461bcd60e51b81526020600482015260126024820152710616d6f756e74732063616e277420626520360741b604482015290519081900360640190fd5b604080516323b872dd60e01b81523360048201523060248201526044810189905290516001600160a01b038a16916323b872dd9160648083019260209291908290030181600087803b158015610b3257600080fd5b505af1158015610b46573d6000803e3d6000fd5b505050506040513d6020811015610b5c57600080fd5b5050600254610b759089906001600160a01b0316610d8f565b6002546040805163f305d71960e01b81526001600160a01b038b81166004830152602482018b9052604482018a90526064820189905287811660848301524260a483015291516000938493849391169163f305d71991349160c480830192606092919082900301818588803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b50505050506040513d6060811015610c1857600080fd5b508051602082015160409092015190945090925090506000610c3a8b85610e99565b1115610ccd576001600160a01b038b1663a9059cbb88610c5a8d87610e99565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b505050506040513d6020811015610cca57600080fd5b50505b919a90995090975095505050505050565b6060610d33826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ef69092919063ffffffff16565b8051909150156103a357808060200190516020811015610d5257600080fd5b50516103a35760405162461bcd60e51b815260040180806020018281038252602a8152602001806111b3602a913960400191505060405180910390fd5b60408051636eb1769f60e11b81523060048201526001600160a01b03838116602483015291519184169163dd62ed3e91604480820192602092909190829003018186803b158015610ddf57600080fd5b505afa158015610df3573d6000803e3d6000fd5b505050506040513d6020811015610e0957600080fd5b5051610e9557816001600160a01b031663095ea7b3826000196040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610e6857600080fd5b505af1158015610e7c573d6000803e3d6000fd5b505050506040513d6020811015610e9257600080fd5b50505b5050565b600082821115610ef0576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6060610f058484600085610f0f565b90505b9392505050565b606082471015610f505760405162461bcd60e51b815260040180806020018281038252602681526020018061113c6026913960400191505060405180910390fd5b610f598561106b565b610faa576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610fe95780518252601f199092019160209182019101610fca565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461104b576040519150601f19603f3d011682016040523d82523d6000602084013e611050565b606091505b5091509150611060828286611071565b979650505050505050565b3b151590565b60608315611080575081610f08565b8251156110905782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110da5781810151838201526020016110c2565b50505050905090810190601f1680156111075780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212207e5c79fe73a4047286c93626bba271365d876edf0c4ed2bfbb586f9b1eeab92464736f6c634300060c0033";

type AddLiquidityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddLiquidityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddLiquidity__factory extends ContractFactory {
  constructor(...args: AddLiquidityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddLiquidity> {
    return super.deploy(overrides || {}) as Promise<AddLiquidity>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddLiquidity {
    return super.attach(address) as AddLiquidity;
  }
  connect(signer: Signer): AddLiquidity__factory {
    return super.connect(signer) as AddLiquidity__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddLiquidityInterface {
    return new utils.Interface(_abi) as AddLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddLiquidity {
    return new Contract(address, _abi, signerOrProvider) as AddLiquidity;
  }
}
